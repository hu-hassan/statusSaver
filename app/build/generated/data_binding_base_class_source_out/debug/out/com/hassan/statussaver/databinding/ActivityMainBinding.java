// Generated by view binder compiler. Do not edit!
package com.hassan.statussaver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.hassan.statussaver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageButton buttonIcon;

  @NonNull
  public final ImageButton buttonIcon2;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final View grayShade;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ImageButton notificationIcon;

  @NonNull
  public final ImageButton settingsIcon;

  @NonNull
  public final TextView toolbarTitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageButton buttonIcon,
      @NonNull ImageButton buttonIcon2, @NonNull FrameLayout fragmentContainer,
      @NonNull View grayShade, @NonNull ConstraintLayout main,
      @NonNull ImageButton notificationIcon, @NonNull ImageButton settingsIcon,
      @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.buttonIcon = buttonIcon;
    this.buttonIcon2 = buttonIcon2;
    this.fragmentContainer = fragmentContainer;
    this.grayShade = grayShade;
    this.main = main;
    this.notificationIcon = notificationIcon;
    this.settingsIcon = settingsIcon;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.button_icon;
      ImageButton buttonIcon = ViewBindings.findChildViewById(rootView, id);
      if (buttonIcon == null) {
        break missingId;
      }

      id = R.id.button_icon2;
      ImageButton buttonIcon2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonIcon2 == null) {
        break missingId;
      }

      id = R.id.fragmentContainer;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.gray_shade;
      View grayShade = ViewBindings.findChildViewById(rootView, id);
      if (grayShade == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.notification_icon;
      ImageButton notificationIcon = ViewBindings.findChildViewById(rootView, id);
      if (notificationIcon == null) {
        break missingId;
      }

      id = R.id.settings_icon;
      ImageButton settingsIcon = ViewBindings.findChildViewById(rootView, id);
      if (settingsIcon == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, appBarLayout, buttonIcon,
          buttonIcon2, fragmentContainer, grayShade, main, notificationIcon, settingsIcon,
          toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
