// Generated by view binder compiler. Do not edit!
package com.hassan.statussaver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.hassan.statussaver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMediaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView mediaRecyclerView;

  @NonNull
  public final MaterialButton tempMediaBtn;

  @NonNull
  public final TextView tempMediaText;

  @NonNull
  public final TextView tempMediaText2;

  private FragmentMediaBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView mediaRecyclerView, @NonNull MaterialButton tempMediaBtn,
      @NonNull TextView tempMediaText, @NonNull TextView tempMediaText2) {
    this.rootView = rootView;
    this.mediaRecyclerView = mediaRecyclerView;
    this.tempMediaBtn = tempMediaBtn;
    this.tempMediaText = tempMediaText;
    this.tempMediaText2 = tempMediaText2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMediaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMediaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_media, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMediaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.media_recycler_view;
      RecyclerView mediaRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (mediaRecyclerView == null) {
        break missingId;
      }

      id = R.id.tempMediaBtn;
      MaterialButton tempMediaBtn = ViewBindings.findChildViewById(rootView, id);
      if (tempMediaBtn == null) {
        break missingId;
      }

      id = R.id.tempMediaText;
      TextView tempMediaText = ViewBindings.findChildViewById(rootView, id);
      if (tempMediaText == null) {
        break missingId;
      }

      id = R.id.tempMediaText2;
      TextView tempMediaText2 = ViewBindings.findChildViewById(rootView, id);
      if (tempMediaText2 == null) {
        break missingId;
      }

      return new FragmentMediaBinding((ConstraintLayout) rootView, mediaRecyclerView, tempMediaBtn,
          tempMediaText, tempMediaText2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
